<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>product-service</artifactId>
    <groupId>com.samples.products</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.samples.products</groupId>
  <artifactId>microservice</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-web</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
      <version>${spring-boot.version}</version>
    </dependency>

    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
      <version>${lombok.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-test</artifactId>
      <groupId>org.springframework.boot</groupId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <artifactId>validation-api</artifactId>
      <groupId>javax.validation</groupId>
    </dependency>
    <dependency>
      <artifactId>springfox-swagger2</artifactId>
      <groupId>io.springfox</groupId>
      <version>${springfox-swagger.version}</version>
    </dependency>
    <dependency>
      <artifactId>springfox-swagger-ui</artifactId>
      <groupId>io.springfox</groupId>
      <version>${springfox-swagger.version}</version>
    </dependency>
    <dependency>
      <artifactId>spring-boot-starter-security</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>h2</artifactId>
      <groupId>com.h2database</groupId>
      <scope>runtime</scope>
      <version>${h2.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
  </dependencies>


  <build>
    <testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>${project.basedir}/src/main/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerVersion>${java.version}</compilerVersion>
          <fork>true</fork>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <dependencies>
          <dependency>
            <artifactId>checkstyle</artifactId>
            <groupId>com.puppycrawl.tools</groupId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <configuration>
              <configLocation>google_checks.xml</configLocation>
              <consoleOutput>true</consoleOutput>
              <encoding>UTF-8</encoding>
              <failOnViolation>true</failOnViolation>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>false</includeTestSourceDirectory>
              <logViolationsToConsole>true</logViolationsToConsole>
              <violationSeverity>warning</violationSeverity>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>use-google-java-format</id>
            <phase>compile</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-checkstyle-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <argLine>${argLine}</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>${argLine}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <configuration>
          <!--give some time to startup in integration stage -->
          <wait>5000</wait>
          <profiles>
            <profile>test</profile>
          </profiles>
        </configuration>
      </plugin>

      <!-- For the microservice build JACOCO only generates the unit test data. In the -->
      <!-- functional-test module data coverage from the functional tests is merged with -->
      <!-- unit test coverage data. This combined coverage data is used for the code check. -->

      <plugin>
        <groupId>org.jacoco</groupId>
        <version>${jacoco-maven-plugin.version}</version>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jacoco-initialize-microservice</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>after-unit-test-execution</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>
                ${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report
              </outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <version>${maven-release-plugin.version}</version>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>validate</goals>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
